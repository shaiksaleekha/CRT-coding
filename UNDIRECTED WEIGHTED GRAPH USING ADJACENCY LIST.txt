UNDIRECTED WEIGHTED GRAPH USING ADJACENCY LIST

def addNode(v):
    if v in graph:
        print(v,"is already existed")
    else:
        graph[v]=[]
def show():
     for x in graph:
         print(x,":",graph[x])
def addedge(node1,node2,w):
    if node1 not in graph:
        print(node1,"is not available in graph")
    elif node2 not in graph:
        print(node2,"is not available in graph")
    else:
        graph[node1].append([node2,w])
        graph[node2].append([node1,w])
graph={}
while True:
    print()
    print("1.add node\n2.add edge\n3.show\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        x=input("enter node:")
        addNode(x)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        w=int(input("enter weight"))
        addedge(node1,node2,w)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")

OUTPUT:

1.add node
2.add edge
3.show
4.exit
enter your choice1
enter node:A
1.add node
2.add edge
3.show
4.exit
enter your choice1
enter node:B
1.add node
2.add edge
3.show
4.exit
enter your choice3
A : []
B : []

1.add node
2.add edge
3.show
4.exit
enter your choice2
enter node1A
enter node2B
enter weight23
1.add node
2.add edge
3.show
4.exit
enter your choice3
A : [['B', 23]]
B : [['A', 23]]

1.add node
2.add edge
3.show
4.exit
enter your choice
