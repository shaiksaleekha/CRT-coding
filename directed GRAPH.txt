create and print UNDIRECTED using adjacency matrix

code:
def addNode(v):
    global n
    if v in nodes:
        print(v,"is already exit")
    else:
        nodes.append(v)
        n=n+1
    for x in graph:
        x.append(0)
    temp=[]
    for i in range(n):
        temp.append(0)
    graph.append(temp)
def show():
    for i in range(n):
        for j in range(n):
            print(graph[i][j],end=" ")
        print()
def addedge(node1,node2):
    if node1 not in nodes:
        print(node1,"is not available in graph")
    elif node2 not in nodes:
        print(node2,"is not available in graph")
    else:
        i=nodes.index(node1)
        j=nodes.index(node2)
        graph[i][j]=1
nodes=[]
graph=[]
n=0
while True:
    print()
    print("1.add node\n2.add edge\n3.show\n4.exit")
    ch=int(input("enter your choice"))
    if ch==1:
        v=input("enter node:")
        addNode(v)
    elif ch==2:
        node1=input("enter node1")
        node2=input("enter node2")
        addedge(node1,node2)
    elif ch==3:
        show()
    elif ch==4:
        break
    else:
        print("invalid choice")

OUTPUT:
1.add node
2.add edge
3.show
4.exit
enter your choice1
enter node:A
1.add node
2.add edge
3.show
4.exit
enter your choice1
enter node:B
1.add node
2.add edge
3.show
4.exit
enter your choice1
enter node:C
1.add node
2.add edge
3.show
4.exit
enter your choice1
enter node:D
1.add node
2.add edge
3.show
4.exit
enter your choice3
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0
1.add node
2.add edge
3.show
4.exit
enter your choice2
enter node1A
enter node2B
1.add node
2.add edge
3.show
4.exit
enter your choice3
0 1 0 0
0 0 0 0
0 0 0 0
0 0 0 0
1.add node
2.add edge
3.show
4.exit
enter your choice